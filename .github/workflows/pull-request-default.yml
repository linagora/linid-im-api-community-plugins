name: Default check for plugin pull-request

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  delete-comments:
    name: Delete bot comment(s)
    runs-on: ubuntu-latest
    steps:
      - uses: izhangzhihao/delete-comment@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_user_name: github-actions[bot]
          issue_number: ${{ github.event.number }}

  branch-naming-rules:
    name: Check branch name
    runs-on: ubuntu-latest
    steps:
      - uses: deepakputhraya/action-branch-name@master
        with:
          regex: '^(feature|bugfix|improvement|library||hotfix)\/[a-z0-9_.-]+$'
          allowed_prefixes: 'feature,bugfix,improvement,library,hotfix'
          ignore: main
          min_length: 5
          max_length: 50

  commit-message-check:
    name: Commit message check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Check commit message with semantic-version plugin
        run: mvn -ntp io.github.zorin95670:semantic-version:0.4.0:check-commit -DnoMerge=true

  detect-plugins:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get modified plugins
        id: set-matrix
        run: |
          echo "🔍 Detecting modified plugins from commit messages..."

          # Get last tag or empty if none
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [ -n "$LAST_TAG" ]; then
            echo "Last tag found: $LAST_TAG"
            RANGE="$LAST_TAG..HEAD"
          else
            echo "No tag found, using all commits"
            RANGE="$(git rev-list --max-parents=0 HEAD)..HEAD"
          fi

          echo "Using range: $RANGE"

          # Extract plugin names from commit messages like: feat(plugin): message
          PLUGINS=$(git log $RANGE --pretty=format:"%s" \
            | grep -oP '(?<=\().+?(?=\))' \
            | sort -u \
            | grep -v '^template-plugin$' \
            | jq -R -s -c 'split("\n") | map(select(length > 0))')

          echo "matrix=${PLUGINS}"
          echo "matrix=${PLUGINS}" >> $GITHUB_OUTPUT

  checkstyle:
    name: Code style - ${{ matrix.plugin }}
    needs: detect-plugins
    runs-on: ubuntu-latest
    strategy:
      matrix:
        plugin: ${{ fromJson(needs.detect-plugins.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Run checkstyle on plugin
        run: mvn -ntp checkstyle:check -pl ${{ matrix.plugin }} -am